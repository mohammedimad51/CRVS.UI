@model EditRoleViewModel

@{
    ViewData["Title"] = "EditRole";
}

<h1>Edit Role</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditRole" asp-controller="Account" method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="RoleId" class="control-label"></label>
                <input asp-for="RoleId" readonly class="form-control" />
                <span asp-validation-for="RoleId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RoleName" class="control-label"></label>
                <input asp-for="RoleName" class="form-control" />
                <span asp-validation-for="RoleName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="SAVE" class="btn btn-primary" />
                <a asp-action="RolesList">Cancel</a>
            </div>
        </form>
    </div>
</div>


    <div class="card">

        <div class="card-header">
        <h3>Users In This Role</h3>
        </div>
    @foreach (var item in Model.Users!)
    {
        <div class="card-body">
            <span>@item</span>
            @*<input type="checkbox" value=" @item">*@
        </div>
    }
        <div class="card-footer text-center">
        <a asp-action="AddRemoveUserRole" asp-controller="Account"
             asp-route-id="@Model.RoleId" class="btn btn-primary"> Add/Remove User Frome This Role</a>
          
        </div>
    </div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
